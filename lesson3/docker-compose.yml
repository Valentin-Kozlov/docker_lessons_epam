version: '3.9'
services:
  frontend:
    build:
        context: ./frontend/
        dockerfile: Dockerfile_frontend
    container_name: frontend
    ports: 
        - "80:80"
    networks:
        - front-back
    depends_on:
        - backend
    healthcheck:
        test: curl -f http://localhost || exit 1
        interval: 60s
        retries: 5
        start_period: 20s
        timeout: 10s
    restart: "unless-stopped"
  backend:
    build:
        context: ./lib_catalog/
        dockerfile: Dockerfile_backend
    container_name: backend
    ports:
        - "8000:8000"
    networks:
        - front-back
        - back-database
    depends_on:
        database:
            condition: service_healthy
    healthcheck:
        test: curl -f http://localhost:8000 || exit 1
        interval: 60s
        retries: 5
        start_period: 20s
        timeout: 10s
    restart: "unless-stopped"
  database:
    image: postgres:latest
    container_name: database
    volumes:
        - data:/var/lib/postgresql/data/
    ports:
        - "5432:5432"
    networks:
        - back-database
    env_file: .env
    environment:
        - POSTGRES_USER=${USER}
        - POSTGRES_PASSWORD=${PASSWORD}
        - POSTGRES_DB=${DB}
        - POSTGRES_PORT=${PORT}
        - PGDATA=${PGDATA}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${USER} -d ${DB}"]
        interval: 10s
        timeout: 5s
        retries: 5
    restart: "unless-stopped"
networks:
  front-back:
      driver: bridge
  back-database:
      driver: bridge
volumes:
  data:    